# deploy/docker-compose.prod.yml
version: '3.8'

services:
  web:
    build: 
      context: ..
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - ubongo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: ../docker/nginx
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - ubongo-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    restart: unless-stopped
    networks:
      - ubongo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    env_file:
      - .env.prod
    restart: unless-stopped
    networks:
      - ubongo-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  celery_worker:
    build: 
      context: ..
      dockerfile: Dockerfile.prod
    command: celery -A ubongo worker --loglevel=info --max-tasks-per-child=1000
    volumes:
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - ubongo-network
    healthcheck:
      test: ["CMD", "celery", "-A", "ubongo", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_beat:
    build: 
      context: ..
      dockerfile: Dockerfile.prod
    command: celery -A ubongo beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - ubongo-network

  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ubongo-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    networks:
      - ubongo-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ubongo-network:
    driver: bridge